mydata = read.csv("mydata.csv")  # read csv file
mydata = read.csv("sample1.csv")  # read csv file
mydata
mydata = read.csv("Sample1.csv", header = TRUE, sep = ";", dec = ",")
mydata
require(grDevices) # for colours
tN <- table(Ni <- stats::rpois(100, lambda = 5))
r <- barplot(tN, col = rainbow(20))
#- type = "h" plotting *is* 'bar'plot
lines(r, tN, type = "h", col = "red", lwd = 2)
barplot(tN, space = 1.5, axisnames = FALSE,
sub = "barplot(..., space= 1.5, axisnames = FALSE)")
barplot(VADeaths, plot = FALSE)
barplot(VADeaths, plot = FALSE, beside = TRUE)
mp <- barplot(VADeaths) # default
tot <- colMeans(VADeaths)
text(mp, tot + 3, format(tot), xpd = TRUE, col = "blue")
barplot(VADeaths, beside = TRUE,
col = c("lightblue", "mistyrose", "lightcyan",
"lavender", "cornsilk"),
legend = rownames(VADeaths), ylim = c(0, 100))
title(main = "Death Rates in Virginia", font.main = 4)
hh <- t(VADeaths)[, 5:1]
mybarcol <- "gray20"
mp <- barplot(hh, beside = TRUE,
col = c("lightblue", "mistyrose",
"lightcyan", "lavender"),
legend = colnames(VADeaths), ylim = c(0,100),
main = "Death Rates in Virginia", font.main = 4,
sub = "Faked upper 2*sigma error bars", col.sub = mybarcol,
cex.names = 1.5)
segments(mp, hh, mp, hh + 2*sqrt(1000*hh/100), col = mybarcol, lwd = 1.5)
stopifnot(dim(mp) == dim(hh))  # corresponding matrices
mtext(side = 1, at = colMeans(mp), line = -2,
text = paste("Mean", formatC(colMeans(hh))), col = "red")
# Bar shading example
barplot(VADeaths, angle = 15+10*1:5, density = 20, col = "black",
legend = rownames(VADeaths))
title(main = list("Death Rates in Virginia", font = 4))
# border :
barplot(VADeaths, border = "dark blue")
# log scales (not much sense here):
barplot(tN, col = heat.colors(12), log = "y")
barplot(tN, col = gray.colors(20), log = "xy")
# args.legend
barplot(height = cbind(x = c(465, 91) / 465 * 100,
y = c(840, 200) / 840 * 100,
z = c(37, 17) / 37 * 100),
beside = FALSE,
width = c(465, 840, 37),
col = c(1, 2),
legend.text = c("A", "B"),
args.legend = list(x = "topleft"))
barplot(mydata)
install.packages(c("ggplot2", "reshape"))
mydata = read.csv("Sample1.csv", header = TRUE, sep = ";", dec = ",")
library(ggplot2)
library(reshape)
data2=melt(data,id=c("Type"))
data2
data = read.csv("Sample1.csv", header = TRUE, sep = ";", dec = ",")
data2
data2=melt(data,id=c("Type"))
data2
qplot(Type,value,data=data2,geom="line",linetype=size)
?attach
ls
ls()
data[2,2]
data[2]
data[,2]
data[2,]
data[2,5 "size"]
data[2:5, "size"]
dim(data)
str(data)
summary(datA)
summary(DATA)
summary(data)
ggplot(data, aes(x = write))
ggplot(data, aes(x = write)) + geom_histogram()
ggplot(data, aes(x = value)) + geom_histogram()
ggplot(data, aes(x = value))
ggplot(data, aes(x = value)) + geom_histogram()
ggplot(data, aes(x = type, y=value)) + geom_histogram()
ggplot(data, aes(x = size, y=value)) + geom_histogram()
xtabs(~size, data)
xtabs(~type, data)
?lm
png(filename="plot-sample1.png")
ggplot(data, aes(x = size, y=value)) + geom_histogram()
ggplot(data, aes(x = value)) + geom_histogram()
dev.off()
setwd("D:/gitRepos/group-recsys-thesis/design/R-Analisys")
mydata = read.csv("./data/Sample1.csv", header = TRUE, sep = ";", dec = ",")
mydata
install.packages("vcd")
plot(mydata$type, mydata$size)
par()
plot(mydata$type, mydata$size, type="b")
plot(mydata$size, mydata$value, type="b")
plot(mydata$size, mydata$value)
plot(mydata$size, mydata$value, title="SAMPLE plot")
plot(mydata$size, mydata$value, xlab="Group Size", ylab="Frequency")
legend("topleft", title="sample plot")
lines(mydata$size, mydata$type, type="b")
lines(mydata$size, mydata$type)
dev.off()
lines(mydata$size, mydata$type)
plot(mydata$size, mydata$value, xlab="Group Size", ylab="Frequency")
lines(mydata$size, mydata$type)
lines(mydata$type, mydata$values)
lines(mydata$type, mydata$value)
dev.off()
barplot(mydata$size)
mydata$size
mydata
barplot(mydata)
barplot(as.matrix(mydata))
as.matrix(mydata)
as.matrix(mydata$type)
barplot(as.matrix(mydata$type))
barplot(as.matrix(mydata$value))
barplot(as.matrix(mydata$size))
mydata[size=2]
mydata[wich(size=2)]
mydata[which(size=2)]
mydata[which(mydata$size==2)]
mydata[which(mydata$size==2),]
mydata[which(mydata$size==2),mydata$type]
subste(mydata, size ==2, select=c(type, value))
subset(mydata, size ==2, select=c(type, value))
mydataSize2 <- subset(mydata, size ==2, select=c(type, value))
mydataSize3 <- subset(mydata, size ==3, select=c(type, value))
mydataSize3
bind(mydataSize2, mydataSize3)
merge(mydataSize2, mydataSize3, by="type")
total <- merge(mydataSize2, mydataSize3, by="type")
barplot(total)
barplot(as.matrix(total))
View(mydata)
View(mydata)
View(mydataSize2)
View(mydataSize3)
View(total)
barplot(as.matrix(total), besides="TRUE")
barplot(as.matrix(total), beside="TRUE")
barplot(as.matrix(total), beside=TRUE)
barplot(total, main="Grouped Bar Plot", xlab="Treatment", ylab="Frequency", col=c("red", "yellow", "green"), legend=rownames(counts), beside=TRUE)
barplot(as.matrix(total), main="Grouped Bar Plot", xlab="Treatment", ylab="Frequency", col=c("red", "yellow", "green"), legend=rownames(counts), beside=TRUE)
barplot(as.matrix(total), main="Grouped Bar Plot", xlab="Treatment", ylab="Frequency", col=c("red", "yellow", "green"), legend=rownames(total), beside=TRUE)
barplot(as.matrix(total), main="Grouped Bar Plot", xlab="Treatment", ylab="Frequency", col=c("red", "yellow", "green"), legend=rownames(total))
barplot(as.matrix(total), main="Grouped Bar Plot", xlab="Treatment", ylab="Frequency", col=c("red", "yellow", "green", "grey"), legend=rownames(total))
barplot(as.matrix(total), main="Grouped Bar Plot", xlab="Treatment", ylab="Frequency", col=c("red", "yellow", "green", "grey"), legend=total$type)
plot(total$value.x)
plot(total$value.x, total$type)
plot(total$type, total$value.x)
plot(total$type, total)
str(total)
hsb2 <- read.table('http://www.ats.ucla.edu/stat/r/modules/hsb2.csv', header=T, sep=",")
attach(hsb2)
View(hsb2)
a<-table(ses)
barplot(a)
fix(a)
fix(a)
view(a)
View(hsb2)
fix(a)
b<-table(ses, female)
barplot(b, beside=T, xlab="cell count
by ses and female")
fix(b)
detach(hsb2)
attach(mydatA)
attach(mydatA)
attach(mydata)
View(mydata)
c <- table(type,size,value)
fix(c)
barplot(c, beside=T)
barplot(total, beside=T)
barplot(as.matrix(total), beside=T)
head(c)
head(a)
head(b)
df <- data.frame(id = c(1,1,2,3,3,2),
p = c(10,0,22,34,0,0))
View(df)
aggregate(df, by=list(id), sum)
aggregate(df, by=list(df$id), sum)
library(reshape2)
dcast(df, id ~ ., value.var = "p", sum)
d <- dcast(df, id ~ ., value.var = "p", sum)
View(d)
tapply(p, id, sum)
tapply(df$p, df$id, sum)
e <- tapply(df$p, df$id, sum)
fix(e)
head(e)
tapply(mydata$value,mydata$size, sum)
by1 <- c("A", "B", "C", "D")
by2 <- c(2, 3, 4, 5,6, 7, 8, 9)
aggregate(x = mydata, by = list(by1, by2), FUN = "sum")
by1 <- c("A", "B", "C", "D")
by2 <- c(2, 3, 4, 5,6, 7, 8, 9)
aggregate(x = mydata, by = by1, FUN = "sum")
by1 <- c("A", "B", "C", "D")
by2 <- c(2, 3, 4, 5,6, 7, 8, 9)
aggregate(x = mydata, by = list(by1), FUN = "sum")
by1 <- c("A", "B", "C", "D")
by2 <- c(2, 3, 4, 5,6, 7, 8, 9)
aggregate(x = mydata$value, by = list(by1), FUN = "sum")
levels(mydata$type)
levels(mydata$size)
factor(mydata$size)
levels(mydata$size)
View(mydata)
str(mydata)
size.f <- factor(mydata$size, levels=c("Size2", "Improved", "Excellent"))
size.f
mydata$size <- as.factor(mydata$size)
str(mydata)
mydata.table <- table(mydata)
fix(mydata.table)
head(mydata.table)
?xtabs
xtabs(mydata$type ~ mydata$size, mydata)
xtabs(mydata$value, mydata)
xtabs(mydata$value  ., mydata)
xtabs(mydata$value ~ ., mydata)
mydata.table <- xtabs(mydata$value ~ ., mydata)
barplot(mydata.table, beside=T)
barplot(mydata.table, ylim=c(0,1.0), beside=T)
par(mfrow=c(2,1))
barplot(mydata.table, ylim=c(0,1.0), beside=T)
barplot(mydata.table, ylim=c(0,1.0), beside=T)
barplot(mydata.table, ylim=c(0,1.0), beside=T)
mydata.table$type
colnames(mydata.table)
rownames(mydata.table)
barplot(mydata.table, names.arg=rownames(mydata.table), ylim=c(0,1.0), beside=T)
legend("topleft", rownames(mydata.table), cex=0.6, bty="n", fill=rainbow(4));
barplot(mydata.table, ylim=c(0,1.0), beside=T, col=rainbow(4))
legend("topleft", rownames(mydata.table), cex=0.6, bty="n", fill=rainbow(4));
barplot(mydata.table, ylim=c(0,1.0), xlab="Group Size", beside=T, col=rainbow(4))
legend("middlecenter", rownames(mydata.table), cex=0.6, bty="n", fill=rainbow(4));
legend("center", rownames(mydata.table), cex=0.6, bty="n", fill=rainbow(4));
legend("top", rownames(mydata.table), cex=0.6, bty="n", fill=rainbow(4));
plot(mydata.table, ylim=c(0,1.0), xlab="Group Size", beside=T, col=rainbow(4))
plot(mydataSize2, type="o", col="blue")
View(mydataSize2)
View(mydataSize3)
View(mydata)
mydataSize2 <- subset(mydata, type == "A", select=c(size, value))
View(mydataSize2)
plot(mydataSize2, type="o", col="blue")
lines(mydataSize2, type="o", pch=22, lty=2, col="red")
lines(mydataSize2, type="o", pch=22, lty=2, col="red")
plot(mydataSize2, type="o", col="blue")
lines(mydataSize2, type="o", pch=22, lty=2, col="red")
# Create a title with a red, bold/italic font
title(main="Autos", col.main="red", font.main=4)
library( lattice )
dat <- data.frame( x=rep(1:5, times=4), y=rnorm(20), gp=rep(1:4,each=5) )
xyplot( y ~ x, dat, group=gp, type='b' )
View(dat)
